"use client"

import { useState } from 'react'
import Image from 'next/image'
import { Heart, Music2, ExternalLink, Grid, List } from 'lucide-react'
import { useStreamingData } from '@/app/hooks/useStreamingData'
import { Button } from "@/components/ui/button"
import { Skeleton } from "@/components/ui/skeleton"
import { Badge } from "@/components/ui/badge"
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from "@/components/ui/card"
import { Artist, PlatformType } from '@/app/types/streaming'

interface FavoriteArtistsProps {
  platforms: PlatformType[]
}

interface StreamingResponse<T> {
  data: T;
  meta?: {
    total: number;
    page: number;
    limit: number;
  };
}

export default function FavoriteArtists({ platforms }: FavoriteArtistsProps) {
  // État pour la vue (grille ou liste)
  const [view, setView] = useState<'grid' | 'list'>('list')
  
  // Récupération des données des artistes favoris avec le type correct
  const { data, isLoading, error } = useStreamingData<Artist[]>('favorites', {
    type: 'favorites',
    platforms
  })

  // Affichage du chargement
  if (isLoading) {
    return (
      <Card className="w-full">
        <CardHeader>
          <Skeleton className="h-8 w-3/4" />
          <Skeleton className="h-4 w-1/2" />
        </CardHeader>
        <CardContent className="space-y-2">
          {[...Array(3)].map((_, i) => (
            <Skeleton key={i} className="h-20 w-full" />
          ))}
        </CardContent>
      </Card>
    )
  }
  // Affichage de l'erreur
  if (error || !data) {
    return (
      <Card className="w-full bg-zinc-900/50">
        <CardContent className="p-6">
          <p className="text-center text-zinc-400">
            Impossible de charger vos artistes favoris
          </p>
        </CardContent>
      </Card>
    )
  }

  const artists = data

  return (
    <Card className="w-full">
      {/* En-tête - Mobile First */}
      <CardHeader className="space-y-2">
        <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center">
          <div>
            <CardTitle className="text-xl">Artistes Favoris</CardTitle>
            <CardDescription>Vos artistes les plus écoutés</CardDescription>
          </div>

          {/* Boutons de vue - Masqués sur mobile */}
          <div className="hidden sm:flex items-center gap-2">
            <Button
              variant={view === 'list' ? 'default' : 'outline'}
              size="sm"
              onClick={() => setView('list')}
            >
              <List className="w-4 h-4 mr-2" />
              Liste
            </Button>
            <Button
              variant={view === 'grid' ? 'default' : 'outline'}
              size="sm"
              onClick={() => setView('grid')}
            >
              <Grid className="w-4 h-4 mr-2" />
              Grille
            </Button>
          </div>
        </div>
      </CardHeader>

      <CardContent>
        {/* Vue Grille - Desktop uniquement */}
        {view === 'grid' ? (
          <div className="hidden sm:grid sm:grid-cols-2 lg:grid-cols-4 gap-4">
            {artists.map((artist: Artist) => (
              <div
                key={artist.id}
                className="group relative bg-zinc-900/50 rounded-lg overflow-hidden"
              >
                <div className="relative aspect-square">
                  <Image
                    src={artist.images && artist.images[0] && artist.images[0].url || '/placeholder.jpg'}
                    alt={artist.name}
                    fill
                    className="object-cover"
                    sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 25vw"
                  />
                  <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300" />
                </div>

                <div className="p-4">
                  <h3 className="text-lg font-semibold text-white truncate">
                    {artist.name}
                  </h3>
                  <p className="text-sm text-zinc-400 truncate">
                    {artist.topTracks[0]?.title}
                  </p>
                  
                  <div className="flex items-center justify-between mt-2">
                    <Badge variant="outline" className="text-xs">
                      {artist.totalPlays.toLocaleString()} écoutes
                    </Badge>
                    <Button 
                      variant="ghost" 
                      size="sm" 
                      className="opacity-0 group-hover:opacity-100"
                    >
                      <ExternalLink className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          // Vue Liste - Par défaut sur mobile
          <div className="space-y-2">
            {artists.map((artist: Artist) => (
              <div
                key={artist.id}
                className="flex items-center gap-4 p-3 bg-zinc-900/50 rounded-lg hover:bg-zinc-900 transition-colors"
              >
                <div className="relative w-12 h-12 flex-shrink-0">
                  <Image
                    src={artist.image || '/placeholder.jpg'}
                    alt={artist.name}
                    fill
                    className="object-cover rounded-md"
                    sizes="48px"
                  />
                </div>

                <div className="flex-1 min-w-0">
                  <h3 className="font-medium text-white truncate">
                    {artist.name}
                  </h3>
                  <p className="text-sm text-zinc-400 truncate">
                    {artist.topTracks[0]?.title}
                  </p>
                  <div className="flex items-center gap-2 mt-1">
                    <Music2 className="w-3 h-3 text-zinc-500" />
                    <span className="text-xs text-zinc-400">
                      {artist.totalPlays.toLocaleString()} écoutes
                    </span>
                  </div>
                </div>

                <Button variant="ghost" size="icon" className="flex-shrink-0">
                  <Heart className="w-4 h-4" />
                </Button>
              </div>
            ))}
          </div>
        )}
      </CardContent>
    </Card>
  )
}