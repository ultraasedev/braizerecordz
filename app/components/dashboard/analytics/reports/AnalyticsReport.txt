// components/analytics/AnalyticsReport.tsx
"use client"

import { useState } from 'react'
import { useStreamingData } from '@/app/hooks/useStreamingData'
import ComparisonCharts from '../charts/ComparisonCharts'
import  GeoVisualization  from '../charts/GeoVisualization'
import { TrackStatsComponent } from '../charts/TrackStats'
import { Card } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { Calendar, Download, Share2 } from "lucide-react"
import { Artist, PlatformType } from '@/app/types/streaming'

interface AnalyticsReport {
  name: string
  stats: Artist[]
  platforms: PlatformType[]
  dateRange: {
    start: string
    end: string
  }
}

interface AnalyticsReportProps {
  reportId?: string
  dateRange?: {
    start: Date
    end: Date
  }
}

export function AnalyticsReportView({ reportId, dateRange }: AnalyticsReportProps) {
  const [selectedTab, setSelectedTab] = useState('overview')
  const [selectedCountry, setSelectedCountry] = useState<string>('FR')

  const { data: report, isLoading } = useStreamingData<AnalyticsReport>('report', {
    type: 'report',
    reportId
  })

  if (isLoading || !report?.data) {
    return (
      <div className="space-y-4">
        <div className="h-8 w-64 bg-zinc-800 rounded-md animate-pulse" />
        <div className="h-[200px] bg-zinc-800 rounded-lg animate-pulse" />
      </div>
    )
  }

  const { name, stats, platforms, dateRange: reportRange } = report.data

  return (
    <div className="space-y-6">
      {/* Header - Mobile First */}
      <div className="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between p-4">
        <div>
          <h1 className="text-xl sm:text-2xl font-bold text-white">{name}</h1>
          <div className="flex items-center gap-2 mt-1 text-sm text-zinc-400">
            <Calendar className="w-4 h-4" />
            <span>
              {new Date(reportRange.start).toLocaleDateString()} - 
              {new Date(reportRange.end).toLocaleDateString()}
            </span>
          </div>
        </div>

        <div className="flex gap-2 sm:gap-4">
          <Button variant="outline" size="sm" className="flex-1 sm:flex-none">
            <Share2 className="w-4 h-4 mr-2" />
            Partager
          </Button>
          <Button variant="outline" size="sm" className="flex-1 sm:flex-none">
            <Download className="w-4 h-4 mr-2" />
            Exporter
          </Button>
        </div>
      </div>

      <Card className="overflow-hidden">
        <Tabs value={selectedTab} onValueChange={setSelectedTab}>
          <TabsList className="w-full justify-start px-4 pt-4">
            <TabsTrigger value="overview">Vue d'ensemble</TabsTrigger>
            <TabsTrigger value="geography">GÃ©ographie</TabsTrigger>
            <TabsTrigger value="tracks">Morceaux</TabsTrigger>
          </TabsList>

          <TabsContent value="overview" className="p-4">
            <ComparisonCharts 
              artists={stats}
              platforms={platforms}
            />
          </TabsContent>

          <TabsContent value="geography" className="p-4">
            <GeoVisualization
              geoStats={stats.flatMap(stat => stat.geoStats)}
              countryFilter={selectedCountry}
              onCountryChange={setSelectedCountry}
            />
          </TabsContent>

          <TabsContent value="tracks" className="p-4">
            <TrackStatsComponent
              tracks={stats.flatMap(stat => stat.topTracks)}
              platformFilter={platforms}
            />
          </TabsContent>
        </Tabs>
      </Card>
    </div>
  )
}